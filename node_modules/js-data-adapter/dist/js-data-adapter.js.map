{"version":3,"file":"js-data-adapter.js","sources":["../src/index.js"],"sourcesContent":["import { Component, utils } from 'js-data'\n\nexport const noop = function (...args) {\n  const opts = args[args.length - 1]\n  this.dbg(opts.op, ...args)\n  return utils.resolve()\n}\n\nexport const noop2 = function (...args) {\n  const opts = args[args.length - 2]\n  this.dbg(opts.op, ...args)\n  return utils.resolve()\n}\n\nexport const unique = function (array) {\n  const seen = {}\n  const final = []\n  array.forEach(function (item) {\n    if (item in seen) {\n      return\n    }\n    final.push(item)\n    seen[item] = 0\n  })\n  return final\n}\n\nexport const withoutRelations = function (mapper, props, opts) {\n  opts || (opts = {})\n  opts.with || (opts.with = [])\n  const relationFields = mapper.relationFields || []\n  const toStrip = relationFields.filter((value) => opts.with.indexOf(value) === -1)\n  return utils.omit(props, toStrip)\n}\n\nexport const reserved = [\n  'orderBy',\n  'sort',\n  'limit',\n  'offset',\n  'skip',\n  'where'\n]\n\n/**\n * Response object used when `raw` is `true`. May contain other fields in\n * addition to `data`.\n *\n * @class Response\n */\nexport function Response (data, meta, op) {\n  meta || (meta = {})\n\n  /**\n   * Response data.\n   *\n   * @name Response#data\n   * @type {*}\n   */\n  this.data = data\n\n  utils.fillIn(this, meta)\n\n  /**\n   * The operation for which the response was created.\n   *\n   * @name Response#op\n   * @type {string}\n   */\n  this.op = op\n}\n\nconst DEFAULTS = {\n  /**\n   * Whether to log debugging information.\n   *\n   * @name Adapter#debug\n   * @type {boolean}\n   * @default false\n   */\n  debug: false,\n\n  /**\n   * Whether to return a more detailed response object.\n   *\n   * @name Adapter#raw\n   * @type {boolean}\n   * @default false\n   */\n  raw: false\n}\n\n/**\n * Abstract class meant to be extended by adapters.\n *\n * @class Adapter\n * @abstract\n * @extends Component\n * @param {Object} [opts] Configuration opts.\n * @param {boolean} [opts.debug=false] Whether to log debugging information.\n * @param {boolean} [opts.raw=false] Whether to return a more detailed response\n * object.\n */\nexport function Adapter (opts) {\n  utils.classCallCheck(this, Adapter)\n  Component.call(this, opts)\n  opts || (opts = {})\n  utils.fillIn(opts, DEFAULTS)\n  utils.fillIn(this, opts)\n}\n\nComponent.extend({\n  constructor: Adapter,\n\n  /**\n   * Lifecycle method method called by <a href=\"#count__anchor\">count</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#count__anchor\">count</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the count.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#count__anchor\">count</a>.\n   *\n   * @name Adapter#afterCount\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @property {string} opts.op `afterCount`\n   * @param {Object|Response} response Count or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCount: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `afterCreate`\n   * @param {Object|Response} response Created record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the created records.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#afterCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `afterCreateMany`\n   * @param {Object[]|Response} response Created records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterCreateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#afterDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `afterDestroy`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroy: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be `undefined`.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#afterDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `afterDestroyAll`\n   * @param {undefined|Response} response `undefined` or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterDestroyAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found record, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#afterFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `afterFind`\n   * @param {Object|Response} response The found record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFind: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the found records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#afterFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `afterFindAll`\n   * @param {Object[]|Response} response The found records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterFindAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#sum__anchor\">sum</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the sum.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * @name Adapter#afterSum\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {string} field The `field` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @property {string} opts.op `afterSum`\n   * @param {Object|Response} response Count or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterSum: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated record.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#afterUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `afterUpdate`\n   * @param {Object|Response} response The updated record or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdate: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#afterUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `afterUpdateAll`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateAll: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * If `opts.raw` is `true` then `response` will be a detailed response object, otherwise `response` will be the updated records, if any.\n   *\n   * `response` may be modified. You can also re-assign `response` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#afterUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} records The `records` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `afterUpdateMany`\n   * @param {Object[]|Response} response The updated records or {@link Response}, depending on the value of `opts.raw`.\n   */\n  afterUpdateMany: noop2,\n\n  /**\n   * Lifecycle method method called by <a href=\"#count__anchor\">count</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#count__anchor\">count</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#count__anchor\">count</a>.\n   *\n   * @name Adapter#beforeCount\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#count__anchor\">count</a>.\n   * @property {string} opts.op `beforeCount`\n   */\n  beforeCount: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#create__anchor\">create</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#create__anchor\">create</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#create__anchor\">create</a>.\n   *\n   * @name Adapter#beforeCreate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#create__anchor\">create</a>.\n   * @property {string} opts.op `beforeCreate`\n   */\n  beforeCreate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#createMany__anchor\">createMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#createMany__anchor\">createMany</a>.\n   *\n   * @name Adapter#beforeCreateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#createMany__anchor\">createMany</a>.\n   * @property {string} opts.op `beforeCreateMany`\n   */\n  beforeCreateMany: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroy__anchor\">destroy</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroy__anchor\">destroy</a>.\n   *\n   * @name Adapter#beforeDestroy\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroy__anchor\">destroy</a>.\n   * @property {string} opts.op `beforeDestroy`\n   */\n  beforeDestroy: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#destroyAll__anchor\">destroyAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   *\n   * @name Adapter#beforeDestroyAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#destroyAll__anchor\">destroyAll</a>.\n   * @property {string} opts.op `beforeDestroyAll`\n   */\n  beforeDestroyAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#find__anchor\">find</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#find__anchor\">find</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#find__anchor\">find</a>.\n   *\n   * @name Adapter#beforeFind\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#find__anchor\">find</a>.\n   * @property {string} opts.op `beforeFind`\n   */\n  beforeFind: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#findAll__anchor\">findAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#findAll__anchor\">findAll</a>.\n   *\n   * @name Adapter#beforeFindAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#findAll__anchor\">findAll</a>.\n   * @property {string} opts.op `beforeFindAll`\n   */\n  beforeFindAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#sum__anchor\">sum</a> to wait for the Promise to resolve before continuing.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#sum__anchor\">sum</a>.\n   *\n   * @name Adapter#beforeSum\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#sum__anchor\">sum</a>.\n   * @property {string} opts.op `beforeSum`\n   */\n  beforeSum: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#update__anchor\">update</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#update__anchor\">update</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#update__anchor\">update</a>.\n   *\n   * @name Adapter#beforeUpdate\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {(string|number)} id The `id` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#update__anchor\">update</a>.\n   * @property {string} opts.op `beforeUpdate`\n   */\n  beforeUpdate: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateAll__anchor\">updateAll</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateAll__anchor\">updateAll</a>.\n   *\n   * @name Adapter#beforeUpdateAll\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} props The `props` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} query The `query` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateAll__anchor\">updateAll</a>.\n   * @property {string} opts.op `beforeUpdateAll`\n   */\n  beforeUpdateAll: noop,\n\n  /**\n   * Lifecycle method method called by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * Override this method to add custom behavior for this lifecycle hook.\n   *\n   * Returning a Promise causes <a href=\"#updateMany__anchor\">updateMany</a> to wait for the Promise to resolve before continuing.\n   *\n   * `props` may be modified. You can also re-assign `props` to another value by returning a different value or a Promise that resolves to a different value.\n   *\n   * A thrown error or rejected Promise will bubble up and reject the Promise returned by <a href=\"#updateMany__anchor\">updateMany</a>.\n   *\n   * @name Adapter#beforeUpdateMany\n   * @method\n   * @param {Object} mapper The `mapper` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object[]} props The `props` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @param {Object} opts The `opts` argument passed to <a href=\"#updateMany__anchor\">updateMany</a>.\n   * @property {string} opts.op `beforeUpdateMany`\n   */\n  beforeUpdateMany: noop,\n\n  /**\n   * Retrieve the number of records that match the selection query. Called by\n   * `Mapper#count`.\n   *\n   * @name Adapter#count\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  count (mapper, query, opts) {\n    let op\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeCount lifecycle hook\n    op = opts.op = 'beforeCount'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        // Allow for re-assignment from lifecycle hook\n        op = opts.op = 'count'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._count(mapper, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, op)\n        response = this.respond(response, opts)\n\n        // afterCount lifecycle hook\n        op = opts.op = 'afterCount'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Create a new record. Called by `Mapper#create`.\n   *\n   * @name Adapter#create\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  create (mapper, props, opts) {\n    let op\n    props || (props = {})\n    opts || (opts = {})\n\n    // beforeCreate lifecycle hook\n    op = opts.op = 'beforeCreate'\n    return utils.resolve(this[op](mapper, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'create'\n        this.dbg(op, mapper, props, opts)\n        return utils.resolve(this._create(mapper, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'create')\n        response.created = data ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterCreate lifecycle hook\n        op = opts.op = 'afterCreate'\n        return utils.resolve(this[op](mapper, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Create multiple records in a single batch. Called by `Mapper#createMany`.\n   *\n   * @name Adapter#createMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  createMany (mapper, props, opts) {\n    let op\n    props || (props = {})\n    opts || (opts = {})\n\n    // beforeCreateMany lifecycle hook\n    op = opts.op = 'beforeCreateMany'\n    return utils.resolve(this[op](mapper, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = props.map((record) => withoutRelations(mapper, record, opts))\n        op = opts.op = 'createMany'\n        this.dbg(op, mapper, props, opts)\n        return utils.resolve(this._createMany(mapper, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'createMany')\n        response.created = data.length\n        response = this.respond(response, opts)\n\n        // afterCreateMany lifecycle hook\n        op = opts.op = 'afterCreateMany'\n        return utils.resolve(this[op](mapper, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Destroy the record with the given primary key. Called by\n   * `Mapper#destroy`.\n   *\n   * @name Adapter#destroy\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroy (mapper, id, opts) {\n    let op\n    opts || (opts = {})\n\n    // beforeDestroy lifecycle hook\n    op = opts.op = 'beforeDestroy'\n    return utils.resolve(this[op](mapper, id, opts))\n      .then(() => {\n        op = opts.op = 'destroy'\n        this.dbg(op, mapper, id, opts)\n        return utils.resolve(this._destroy(mapper, id, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'destroy')\n        response = this.respond(response, opts)\n\n        // afterDestroy lifecycle hook\n        op = opts.op = 'afterDestroy'\n        return utils.resolve(this[op](mapper, id, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Destroy the records that match the selection query. Called by\n   * `Mapper#destroyAll`.\n   *\n   * @name Adapter#destroyAll\n   * @method\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  destroyAll (mapper, query, opts) {\n    let op\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeDestroyAll lifecycle hook\n    op = opts.op = 'beforeDestroyAll'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        op = opts.op = 'destroyAll'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._destroyAll(mapper, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'destroyAll')\n        response = this.respond(response, opts)\n\n        // afterDestroyAll lifecycle hook\n        op = opts.op = 'afterDestroyAll'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Load a belongsTo relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadBelongsTo\n   * @method\n   * @return {Promise}\n   */\n  loadBelongsTo (mapper, def, records, __opts) {\n    const relationDef = def.getRelation()\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      const record = records\n      return this.find(relationDef, this.makeBelongsToForeignKey(mapper, def, record), __opts)\n        .then((relatedItem) => {\n          def.setLocalField(record, relatedItem)\n        })\n    } else {\n      const keys = records\n        .map((record) => this.makeBelongsToForeignKey(mapper, def, record))\n        .filter((key) => key)\n      return this.findAll(relationDef, {\n        where: {\n          [relationDef.idAttribute]: {\n            'in': keys\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        records.forEach((record) => {\n          relatedItems.forEach((relatedItem) => {\n            if (relatedItem[relationDef.idAttribute] === record[def.foreignKey]) {\n              def.setLocalField(record, relatedItem)\n            }\n          })\n        })\n      })\n    }\n  },\n\n  /**\n   * Retrieve the record with the given primary key. Called by `Mapper#find`.\n   *\n   * @name Adapter#find\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  find (mapper, id, opts) {\n    let op\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    // beforeFind lifecycle hook\n    op = opts.op = 'beforeFind'\n    return utils.resolve(this[op](mapper, id, opts))\n      .then(() => {\n        op = opts.op = 'find'\n        this.dbg(op, mapper, id, opts)\n        return utils.resolve(this._find(mapper, id, opts))\n      })\n      .then((results) => this.loadRelationsFor(mapper, results, opts))\n      .then(([record, meta]) => {\n        let response = new Response(record, meta, 'find')\n        response.found = record ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterFind lifecycle hook\n        op = opts.op = 'afterFind'\n        return utils.resolve(this[op](mapper, id, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @name Adapter#findAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n  findAll (mapper, query, opts) {\n    let op\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    const activeWith = opts._activeWith\n\n    if (utils.isObject(activeWith)) {\n      const activeQuery = activeWith.query || {}\n      if (activeWith.replace) {\n        query = activeQuery\n      } else {\n        utils.deepFillIn(query, activeQuery)\n      }\n    }\n\n    // beforeFindAll lifecycle hook\n    op = opts.op = 'beforeFindAll'\n    return utils.resolve(this[op](mapper, query, opts))\n      .then(() => {\n        op = opts.op = 'findAll'\n        this.dbg(op, mapper, query, opts)\n        return utils.resolve(this._findAll(mapper, query, opts))\n      })\n      .then((results) => this.loadRelationsFor(mapper, results, opts))\n      .then(([records, meta]) => {\n        let response = new Response(records, meta, 'findAll')\n        response.found = records.length\n        response = this.respond(response, opts)\n\n        // afterFindAll lifecycle hook\n        op = opts.op = 'afterFindAll'\n        return utils.resolve(this[op](mapper, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  loadRelationsFor (mapper, results, opts) {\n    const [records] = results\n    const tasks = []\n\n    if (records) {\n      utils.forEachRelation(mapper, opts, (def, __opts) => {\n        let task\n        if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n          if (def.type === 'hasOne') {\n            task = this.loadHasOne(mapper, def, records, __opts)\n          } else {\n            task = this.loadHasMany(mapper, def, records, __opts)\n          }\n        } else if (def.type === 'hasMany' && def.localKeys) {\n          task = this.loadHasManyLocalKeys(mapper, def, records, __opts)\n        } else if (def.type === 'hasMany' && def.foreignKeys) {\n          task = this.loadHasManyForeignKeys(mapper, def, records, __opts)\n        } else if (def.type === 'belongsTo') {\n          task = this.loadBelongsTo(mapper, def, records, __opts)\n        }\n        if (task) {\n          tasks.push(task)\n        }\n      })\n    }\n\n    return utils.Promise.all(tasks)\n      .then(() => results)\n  },\n\n  /**\n   * Resolve the value of the specified option based on the given options and\n   * this adapter's settings. Override with care.\n   *\n   * @name Adapter#getOpt\n   * @method\n   * @param {string} opt The name of the option.\n   * @param {Object} [opts] Configuration options.\n   * @return {*} The value of the specified option.\n   */\n  getOpt (opt, opts) {\n    opts || (opts = {})\n    return opts[opt] === undefined ? utils.plainCopy(this[opt]) : utils.plainCopy(opts[opt])\n  },\n\n  /**\n   * Load a hasMany relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasMany\n   * @method\n   * @return {Promise}\n   */\n  loadHasMany (mapper, def, records, __opts) {\n    let singular = false\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n    const IDs = records.map((record) => this.makeHasManyForeignKey(mapper, def, record))\n    const query = {\n      where: {}\n    }\n    const criteria = query.where[def.foreignKey] = {}\n    if (singular) {\n      // more efficient query when we only have one record\n      criteria['=='] = IDs[0]\n    } else {\n      criteria['in'] = IDs.filter((id) => id)\n    }\n    return this.findAll(def.getRelation(), query, __opts).then((relatedItems) => {\n      records.forEach((record) => {\n        let attached = []\n        // avoid unneccesary iteration when we only have one record\n        if (singular) {\n          attached = relatedItems\n        } else {\n          relatedItems.forEach((relatedItem) => {\n            if (utils.get(relatedItem, def.foreignKey) === record[mapper.idAttribute]) {\n              attached.push(relatedItem)\n            }\n          })\n        }\n        def.setLocalField(record, attached)\n      })\n    })\n  },\n\n  loadHasManyLocalKeys (mapper, def, records, __opts) {\n    let record\n    const relatedMapper = def.getRelation()\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      record = records\n    }\n\n    if (record) {\n      return this.findAll(relatedMapper, {\n        where: {\n          [relatedMapper.idAttribute]: {\n            'in': this.makeHasManyLocalKeys(mapper, def, record)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        def.setLocalField(record, relatedItems)\n      })\n    } else {\n      let localKeys = []\n      records.forEach((record) => {\n        localKeys = localKeys.concat(this.makeHasManyLocalKeys(mapper, def, record))\n      })\n      return this.findAll(relatedMapper, {\n        where: {\n          [relatedMapper.idAttribute]: {\n            'in': unique(localKeys).filter((x) => x)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        records.forEach((item) => {\n          let attached = []\n          let itemKeys = utils.get(item, def.localKeys) || []\n          itemKeys = utils.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n          relatedItems.forEach((relatedItem) => {\n            if (itemKeys && itemKeys.indexOf(relatedItem[relatedMapper.idAttribute]) !== -1) {\n              attached.push(relatedItem)\n            }\n          })\n          def.setLocalField(item, attached)\n        })\n        return relatedItems\n      })\n    }\n  },\n\n  loadHasManyForeignKeys (mapper, def, records, __opts) {\n    const relatedMapper = def.getRelation()\n    const idAttribute = mapper.idAttribute\n    let record\n\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      record = records\n    }\n\n    if (record) {\n      return this.findAll(def.getRelation(), {\n        where: {\n          [def.foreignKeys]: {\n            'contains': this.makeHasManyForeignKeys(mapper, def, record)\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        def.setLocalField(record, relatedItems)\n      })\n    } else {\n      return this.findAll(relatedMapper, {\n        where: {\n          [def.foreignKeys]: {\n            'isectNotEmpty': records.map((record) => this.makeHasManyForeignKeys(mapper, def, record))\n          }\n        }\n      }, __opts).then((relatedItems) => {\n        const foreignKeysField = def.foreignKeys\n        records.forEach((record) => {\n          const _relatedItems = []\n          const id = utils.get(record, idAttribute)\n          relatedItems.forEach((relatedItem) => {\n            const foreignKeys = utils.get(relatedItems, foreignKeysField) || []\n            if (foreignKeys.indexOf(id) !== -1) {\n              _relatedItems.push(relatedItem)\n            }\n          })\n          def.setLocalField(record, _relatedItems)\n        })\n      })\n    }\n  },\n\n  /**\n   * Load a hasOne relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#loadHasOne\n   * @method\n   * @return {Promise}\n   */\n  loadHasOne (mapper, def, records, __opts) {\n    if (utils.isObject(records) && !utils.isArray(records)) {\n      records = [records]\n    }\n    return this.loadHasMany(mapper, def, records, __opts).then(() => {\n      records.forEach((record) => {\n        const relatedData = def.getLocalField(record)\n        if (utils.isArray(relatedData) && relatedData.length) {\n          def.setLocalField(record, relatedData[0])\n        }\n      })\n    })\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * There may be reasons why you may want to override this method, like when\n   * the id of the parent doesn't exactly match up to the key on the child.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKey\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Return the localKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyLocalKeys\n   * @method\n   * @return {*}\n   */\n  makeHasManyLocalKeys (mapper, def, record) {\n    let localKeys = []\n    let itemKeys = utils.get(record, def.localKeys) || []\n    itemKeys = utils.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n    localKeys = localKeys.concat(itemKeys)\n    return unique(localKeys).filter((x) => x)\n  },\n\n  /**\n   * Return the foreignKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeHasManyForeignKeys\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKeys (mapper, def, record) {\n    return utils.get(record, mapper.idAttribute)\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @name Adapter#makeBelongsToForeignKey\n   * @method\n   * @return {*}\n   */\n  makeBelongsToForeignKey (mapper, def, record) {\n    return def.getForeignKey(record)\n  },\n\n  /**\n   * Retrieve sum of the specified field of the records that match the selection\n   * query. Called by `Mapper#sum`.\n   *\n   * @name Adapter#sum\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {string} field By to sum.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  sum (mapper, field, query, opts) {\n    let op\n    if (!utils.isString(field)) {\n      throw new Error('field must be a string!')\n    }\n    query || (query = {})\n    opts || (opts = {})\n\n    // beforeSum lifecycle hook\n    op = opts.op = 'beforeSum'\n    return utils.resolve(this[op](mapper, field, query, opts))\n      .then(() => {\n        // Allow for re-assignment from lifecycle hook\n        op = opts.op = 'sum'\n        this.dbg(op, mapper, field, query, opts)\n        return utils.resolve(this._sum(mapper, field, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, op)\n        response = this.respond(response, opts)\n\n        // afterSum lifecycle hook\n        op = opts.op = 'afterSum'\n        return utils.resolve(this[op](mapper, field, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * @name Adapter#respond\n   * @method\n   * @param {Object} response Response object.\n   * @param {Object} opts Configuration options.\n   * return {Object} If `opts.raw == true` then return `response`, else return\n   * `response.data`.\n   */\n  respond (response, opts) {\n    return this.getOpt('raw', opts) ? response : response.data\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key. Called\n   * by `Mapper#update`.\n   *\n   * @name Adapter#update\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  update (mapper, id, props, opts) {\n    props || (props = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdate lifecycle hook\n    op = opts.op = 'beforeUpdate'\n    return utils.resolve(this[op](mapper, id, props, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'update'\n        this.dbg(op, mapper, id, props, opts)\n        return utils.resolve(this._update(mapper, id, props, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        result || (result = {})\n        let response = new Response(data, result, 'update')\n        response.updated = data ? 1 : 0\n        response = this.respond(response, opts)\n\n        // afterUpdate lifecycle hook\n        op = opts.op = 'afterUpdate'\n        return utils.resolve(this[op](mapper, id, props, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   * Called by `Mapper#updateAll`.\n   *\n   * @name Adapter#updateAll\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateAll (mapper, props, query, opts) {\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n    let op\n\n    // beforeUpdateAll lifecycle hook\n    op = opts.op = 'beforeUpdateAll'\n    return utils.resolve(this[op](mapper, props, query, opts))\n      .then((_props) => {\n        // Allow for re-assignment from lifecycle hook\n        props = _props === undefined ? props : _props\n        props = withoutRelations(mapper, props, opts)\n        op = opts.op = 'updateAll'\n        this.dbg(op, mapper, props, query, opts)\n        return utils.resolve(this._updateAll(mapper, props, query, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'updateAll')\n        response.updated = data.length\n        response = this.respond(response, opts)\n\n        // afterUpdateAll lifecycle hook\n        op = opts.op = 'afterUpdateAll'\n        return utils.resolve(this[op](mapper, props, query, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  },\n\n  /**\n   * Update the given records in a single batch. Called by `Mapper#updateMany`.\n   *\n   * @name Adapter#updateMany\n   * @method\n   * @param {Object} mapper The mapper.\n   * @param {Object[]} records The records to update.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n  updateMany (mapper, records, opts) {\n    records || (records = [])\n    opts || (opts = {})\n    let op\n    const idAttribute = mapper.idAttribute\n\n    records = records.filter((record) => utils.get(record, idAttribute))\n\n    // beforeUpdateMany lifecycle hook\n    op = opts.op = 'beforeUpdateMany'\n    return utils.resolve(this[op](mapper, records, opts))\n      .then((_records) => {\n        // Allow for re-assignment from lifecycle hook\n        records = _records === undefined ? records : _records\n        records = records.map((record) => withoutRelations(mapper, record, opts))\n        op = opts.op = 'updateMany'\n        this.dbg(op, mapper, records, opts)\n        return utils.resolve(this._updateMany(mapper, records, opts))\n      })\n      .then((results) => {\n        let [data, result] = results\n        data || (data = [])\n        result || (result = {})\n        let response = new Response(data, result, 'updateMany')\n        response.updated = data.length\n        response = this.respond(response, opts)\n\n        // afterUpdateMany lifecycle hook\n        op = opts.op = 'afterUpdateMany'\n        return utils.resolve(this[op](mapper, records, opts, response))\n          .then((_response) => _response === undefined ? response : _response)\n      })\n  }\n})\n\n/**\n * Create a subclass of this Adapter:\n *\n * @example <caption>Adapter.extend</caption>\n * // Normally you would do: import {Adapter} from 'js-data'\n * const JSData = require('js-data@3.0.0-beta.10')\n * const {Adapter} = JSData\n * console.log('Using JSData v' + JSData.version.full)\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomAdapterClass extends Adapter {\n *   foo () { return 'bar' }\n *   static beep () { return 'boop' }\n * }\n * const customAdapter = new CustomAdapterClass()\n * console.log(customAdapter.foo())\n * console.log(CustomAdapterClass.beep())\n *\n * // Extend the class using alternate method.\n * const OtherAdapterClass = Adapter.extend({\n *   foo () { return 'bar' }\n * }, {\n *   beep () { return 'boop' }\n * })\n * const otherAdapter = new OtherAdapterClass()\n * console.log(otherAdapter.foo())\n * console.log(OtherAdapterClass.beep())\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherAdapterClass () {\n *   Adapter.call(this)\n *   this.created_at = new Date().getTime()\n * }\n * Adapter.extend({\n *   constructor: AnotherAdapterClass,\n *   foo () { return 'bar' }\n * }, {\n *   beep () { return 'boop' }\n * })\n * const anotherAdapter = new AnotherAdapterClass()\n * console.log(anotherAdapter.created_at)\n * console.log(anotherAdapter.foo())\n * console.log(AnotherAdapterClass.beep())\n *\n * @method Adapter.extend\n * @param {Object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {Object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {Object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Adapter class.\n */\n"],"names":["noop","args","opts","length","dbg","op","utils","resolve","noop2","unique","array","seen","final","forEach","item","push","withoutRelations","mapper","props","with","relationFields","toStrip","filter","value","indexOf","omit","reserved","Response","data","meta","fillIn","DEFAULTS","Adapter","classCallCheck","call","Component","extend","query","then","_count","results","result","response","respond","_response","undefined","_props","_create","created","map","record","_createMany","id","_destroy","_destroyAll","def","records","__opts","relationDef","getRelation","isObject","isArray","find","makeBelongsToForeignKey","relatedItem","setLocalField","keys","key","findAll","idAttribute","relatedItems","foreignKey","_find","loadRelationsFor","found","activeWith","_activeWith","activeQuery","replace","deepFillIn","_findAll","tasks","forEachRelation","task","type","loadHasOne","loadHasMany","localKeys","loadHasManyLocalKeys","foreignKeys","loadHasManyForeignKeys","loadBelongsTo","Promise","all","opt","plainCopy","singular","IDs","makeHasManyForeignKey","criteria","where","attached","get","relatedMapper","makeHasManyLocalKeys","concat","x","itemKeys","Object","makeHasManyForeignKeys","foreignKeysField","_relatedItems","relatedData","getLocalField","getForeignKey","field","isString","Error","_sum","getOpt","_update","updated","_updateAll","_records","_updateMany"],"mappings":"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"}